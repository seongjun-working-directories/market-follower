spring.application.name=market-follower

# JPA 가 자동으로 테이블 만들지 않도록 설정
# 엔티티 클래스(@Entity)와 실제 DB 테이블 구조를 비교해서 검증만 진행
spring.jpa.hibernate.ddl-auto=validate

# 대신, Spring Boot가 실행될 때 schema.sql, data.sql 을 항상 실행
# 따라서, IF NOT EXISTS로 보호해둠
spring.sql.init.mode=always

# Actuator Health 상세 정보 노출(/actuator/health)
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Kafka 브로커 주소 (EC2 퍼블릭 IP와 포트)
spring.kafka.bootstrap-servers=43.201.3.45:9092

# Kafka 컨슈머 설정
# -> 컨슈머 그룹 아이디
spring.kafka.consumer.group-id=upbit-group
# -> 시작 오프셋을 가장 오래된 메시지부터 읽기
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka 프로듀서 설정
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Redis 설정
spring.redis.host=43.201.3.45
spring.redis.port=6379