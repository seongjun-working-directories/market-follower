spring.application.name=market-follower

# H2 DB 설정
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# JPA 설정
# spring.jpa.hibernate.ddl-auto=validate

# schema.sql로 테이블 생성 후, data.sql로 초기 데이터 넣음
spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always

# Actuator Health 상세 정보 노출(/actuator/health)
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# H2 콘솔 활성화
spring.h2.console.enabled=true

# H2 콘솔 접속 경로 (기본값은 /h2-console)
spring.h2.console.path=/h2-console

# 내장 톰캣에서 원격 접속 허용
spring.h2.console.settings.web-allow-others=true

# Kafka 브로커 주소 (EC2 퍼블릭 IP와 포트)
spring.kafka.bootstrap-servers=43.201.3.45:9092

# Kafka 컨슈머 설정
# -> 컨슈머 그룹 아이디
spring.kafka.consumer.group-id=upbit-group
# -> 시작 오프셋을 가장 오래된 메시지부터 읽기
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Kafka 프로듀서 설정
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
